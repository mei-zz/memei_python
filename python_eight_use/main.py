# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import cv2 as cv
import os
import numpy as np

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QSlider


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(834, 633)
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 80, 521, 271))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(12)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.line = QtWidgets.QFrame(self.verticalLayoutWidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_2.addWidget(self.line)
        self.chooseFile = QtWidgets.QPushButton(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chooseFile.sizePolicy().hasHeightForWidth())
        self.chooseFile.setSizePolicy(sizePolicy)
        self.chooseFile.setMaximumSize(QtCore.QSize(100, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.chooseFile.setFont(font)
        self.chooseFile.setObjectName("chooseFile")
        self.verticalLayout_2.addWidget(self.chooseFile)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.controlParamc = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.controlParamc.setMaximumSize(QtCore.QSize(100, 20))
        self.controlParamc.setIconSize(QtCore.QSize(12, 12))
        self.controlParamc.setObjectName("controlParamc")
        self.verticalLayout_3.addWidget(self.controlParamc)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_9.addWidget(self.label_4)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.param_cValue_2 = QtWidgets.QDoubleSpinBox(self.verticalLayoutWidget)
        self.param_cValue_2.setObjectName("param_cValue_2")
        self.horizontalLayout_6.addWidget(self.param_cValue_2)
        self.cValueslider_2 = QtWidgets.QSlider(self.verticalLayoutWidget)
        self.cValueslider_2.setOrientation(QtCore.Qt.Horizontal)
        self.cValueslider_2.setObjectName("cValueslider_2")

        # ----------------------------------------------------------#
        # 设置参数γ Slide的范围[1,5]每次移动1
        # 这儿调整的参数了γ 但命名错了是cValueslider_2【暂时不改】
        # 同样在旁边的显示时除以10【Slide只能设置整形】
        self.cValueslider_2.setMinimum(1)
        self.cValueslider_2.setMaximum(50)
        self.cValueslider_2.setValue(1)
        self.cValueslider_2.setSingleStep(1)
        self.cValueslider_2.setTickPosition(QSlider.TicksBelow)
        self.cValueslider_2.setTickInterval(5)
        # ----------------------------------------------------------#

        self.horizontalLayout_6.addWidget(self.cValueslider_2)
        self.verticalLayout_9.addLayout(self.horizontalLayout_6)
        self.verticalLayout_3.addLayout(self.verticalLayout_9)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout_8.addWidget(self.label)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.param_cValue = QtWidgets.QDoubleSpinBox(self.verticalLayoutWidget)
        self.param_cValue.setObjectName("param_cValue")
        self.horizontalLayout_5.addWidget(self.param_cValue)
        self.cValueslider = QtWidgets.QSlider(self.verticalLayoutWidget)
        self.cValueslider.setOrientation(QtCore.Qt.Horizontal)
        self.cValueslider.setObjectName("cValueslider")

        # ----------------------------------------------------------#
        # 设置参数c Slider取值[0.1,3]每次移动0.2
        # 同样在旁边的显示时除以10【Slide只能设置整形】
        self.cValueslider.setMinimum(0)
        self.cValueslider.setMaximum(30)
        self.cValueslider.setValue(0)
        self.cValueslider.setSingleStep(1)
        self.cValueslider.setTickPosition(QSlider.TicksBelow)
        self.cValueslider.setTickInterval(6)
        # ----------------------------------------------------------#

        self.horizontalLayout_5.addWidget(self.cValueslider)
        self.verticalLayout_8.addLayout(self.horizontalLayout_5)
        self.verticalLayout_3.addLayout(self.verticalLayout_8)
        self.verticalLayout_2.addLayout(self.verticalLayout_3)
        self.verticalLayout_2.setStretch(0, 1)
        self.verticalLayout_2.setStretch(1, 2)
        self.verticalLayout_2.setStretch(2, 2)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.init_img = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.init_img.setText("")
        self.init_img.setObjectName("init_img")
        self.horizontalLayout.addWidget(self.init_img)
        self.res_img = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.res_img.setText("")
        self.res_img.setObjectName("res_img")
        self.horizontalLayout.addWidget(self.res_img)
        self.horizontalLayout.setStretch(1, 2)
        self.horizontalLayout.setStretch(2, 2)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(30, 30, 291, 31))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.chooseFile.setText(_translate("Form", "选择图片"))
        self.controlParamc.setText(_translate("Form", "选择参数【点击】"))
        self.label_4.setText(_translate("Form", "参数γ"))
        self.label.setText(_translate("Form", "参数c"))
        self.label_3.setText(_translate("Form", "可视化幂律变换"))

    # ---------------------功能函数------------------------ #
    # 绑定槽函数
    def all_function(self):
        # 文件选择
        self.chooseFile.clicked.connect(lambda: self.click_find_pic())
        # 控制参数
        self.cValueslider_2.valueChanged.connect(lambda: self.valueChange2())
        self.cValueslider.valueChanged.connect(lambda: self.valueChange1())
        # 对自输入的参数进行gamma变换
        self.controlParamc.clicked.connect(lambda: self.gamma_by_param())

    def click_find_pic(self):
        filename, filetype = QtWidgets.QFileDialog.getOpenFileName(self, "选取图片", "./data",
                                                                   "Images (*.jpg *.png)")
        # print(filename)
        # 放置选择的原始图片到init_img位置
        jpg = QtGui.QPixmap(filename).scaled(self.init_img.width(), self.init_img.height())
        self.init_img.setPixmap(jpg)
        # 放置变换后的图片到res_img位置
        out_path = self.gamma_correction(filename,1,2.2)  # 调用变换函数【传入图片路径】
        # print(out_path)
        out_img = QtGui.QPixmap(out_path).scaled(self.init_img.width(), self.init_img.height())
        self.res_img.setPixmap(out_img)  # 先将默认的参数得到的图片放入res_label中

    def gamma_correction(self, path, c, g):
        out_img = cv.imread(path).astype(np.float)
        out_img /= 255.  # 归一化，限定在【0，1]范围内。
        out_img = (1 / c) * out_img ** (1 / g)  # 【0，1】内进行伽马变换
        out_img *= 255  # 之后变回来
        out_img = out_img.astype(np.uint8)  # 【0，255】整形

        # 通过图片绝对路径获得图片文件名字
        pic_name = os.path.basename(path)
        cv.imwrite("F:/{}".format(pic_name), out_img)
        return_str = "F:/{}".format(pic_name)
        # 返回修改后的图片保存路径
        return return_str

    def valueChange2(self):
        # 对γ的控制
        size = (self.cValueslider_2.value()) / 10
        self.param_cValue_2.setValue(size)
        return size

    def valueChange1(self):
        # 对c的控制
        size = (self.cValueslider.value()) / 10
        self.param_cValue.setValue(size)
        return size

    def gamma_by_param(self):
        # TODO 这个函数和gamma_correction函数可以合并
        param1=self.valueChange1()
        param2=self.valueChange2()
        filename, filetype = QtWidgets.QFileDialog.getOpenFileName(self, "选取图片", "./data",
                                                                   "Images (*.jpg *.png)")
        jpg = QtGui.QPixmap(filename).scaled(self.init_img.width(), self.init_img.height())
        self.init_img.setPixmap(jpg)
        out_path = self.gamma_correction(filename, param1, param2)
        out_img = QtGui.QPixmap(out_path).scaled(self.init_img.width(), self.init_img.height())
        self.res_img.setPixmap(out_img)

